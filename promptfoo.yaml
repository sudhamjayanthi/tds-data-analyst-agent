# Start of Selection
description: "TDS Data Analyst Agent – generic eval (20-point rubric)"

providers:
- id: https
  config:
    url: http://localhost:8000/api/ # Replace this with your API endpoint
    method: POST
    body: file://questions.txt
    transformResponse: json

tests:
  - description: "Data analysis"
    assert:
      # Structural gate – no score, hard-fail if not a 4-element array
      - type: is-json
        value: {type: array, minItems: 4, maxItems: 4}
        weight: 0

      # 1️⃣ first answer must equal 1
      - type: python
        weight: 4
        value: |
          import json, sys
          print(json.loads(output)[0] == 1)

      # 2️⃣ second answer must contain “Titanic” (case-insensitive)
      - type: python
        weight: 4
        value: |
          import json, re, sys
          print(bool(re.search(r'titanic', json.loads(output)[1], re.I)))

      # 3️⃣ third answer within ±0.001 of 0.485782
      - type: python
        weight: 4
        value: |
          import json, sys, math
          print(abs(float(json.loads(output)[2]) - 0.485782) <= 0.001)

      # 4️⃣ vision check ― send plot to GPT-4o-mini and grade multiple criteria
      - type: llm-rubric
        provider: openai:gpt-4.1-nano
        weight: 8
        # extract base-64 PNG from the 4th array element and inject into the prompt
        preprocess: |
          import json, re
          data = json.loads(output)
          context['plot'] = data[3]
        rubricPrompt: |
          [
            { "role": "system",
              "content": "Grade the scatterplot. Award *score 1* only iff ALL are true: \
              (a) its a scatterplot of Rank (x-axis) vs Peak (y-axis); \
              (b) a dotted **red** regression line is present; \
              (c) axes are visible & labelled; \
              (d) file size < 100 kB. Otherwise score 0. \
              Respond as JSON: {scatterplot:bool, regression:bool, axes:bool, size:bool, score:number}"
            },
            { "role": "user",
              "content": [
                { "type": "image_url",
                  "image_url": { "url": "{{plot}}" }
                },
                { "type": "text",
                  "text": "Here is the original task:\n\n{{vars.question}}\n\nReview the image and JSON above." }
              ]
            }
          ]
        threshold: 0.99  # require full pass
# End of Selection
